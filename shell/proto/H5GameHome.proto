syntax = "proto2";
package com.wali.knights.proto;

option java_package = "com.wali.knights.proto";
option java_outer_classname = "H5GameHomeProto";

 //小游戏详细信息
message H5GameInfo {
    required uint32 gameId = 1;         // 游戏id
    optional string gameName = 2;       // 游戏名称
    optional string cdnDomain = 3;      // cdn域名
    optional string icon = 4;           // 游戏图标
    optional uint64 publisherId = 5;    // 开发商id
    optional string publisherName = 6;  // 开发商名称
    optional string summary = 7;        // 摘要
    optional string introduction = 8;   // 游戏介绍
    optional string url = 9;            // 游戏跳转地址
    repeated string pictures = 10;      // 游戏图片
}

//小游戏简化信息
message H5GameSimp {
    required uint32 gameId = 1;             // 游戏id
    required string gameName = 2;           // 游戏名称
    optional string cdnDomain = 3;          // cdn域名
    optional string icon = 4;               // 游戏图标
    repeated string pictures = 5;           // 游戏图片
    optional string url = 6;                // 游戏跳转地址
    optional uint32 pkPlayNum = 7;          // 正在进行游戏的对数
    optional GameCoverColor coverColor = 8;  // 小游戏封边颜色
}

// 游戏封面的颜色信息
message GameCoverColor {
    optional string startColor = 1;     // 渐变色起始色值
    optional string endColor = 2;       // 渐变色结束色值
}

message UserInfoSimp{
    required uint64 uuid                   = 1; //用户ID
    optional uint64 headImgTs              = 2; //头像时间戳，精确到秒
    optional string nickname               = 3; //昵称
    optional uint32 sex                    = 4; //性别 1男 2女 0未知
}

//broadcast 广播
message PkBroadcast {
    repeated UserInfoSimp redParty =1;
    repeated UserInfoSimp blueParty =2;
    optional H5GameSimp gameInfo =3;
    optional string winner =4; //获胜方，red、blue
    optional uint32 gameStatus =5; // 0:创建创建 1:准备 2:开始 3:游戏中(status=2双方都查询房间信息) 4:游戏结束
}

/*
    banner 信息
    pic 活动模块图片
    url 活动模块的跳转地址
    title banner标题
    content banner内容
    bannerType banner类型 1 正常的 2 可跳转游戏匹配的
    userInfo 用户信息
*/
message Banner {
    required string pic = 1;
    required string url = 2;
    optional uint32 bannerType = 3;
    optional string title = 4;
    optional string content = 5;
    repeated UserInfoSimp userInfo = 6;
}

/*
    获取小游戏首页数据 请求
    uuid 用户id
*/
message GetH5GameHomePageReq {
    required uint64 uuid = 1;
    optional uint32 gameLimit =2;
}

/*
    获取小游戏首页数据 响应
    retCode 错误码 0成功1失败
    errMsg 错误码解释
    bannerList banner图列表
    gameList 游戏列表
    pkBroadcastList 对战广场
*/
message GetH5GameHomePageRsp {
    required uint32 retCode = 1;
    optional string errMsg = 2;
    repeated Banner bannerList = 3;
    repeated H5GameSimp gameList = 4;
    repeated PkBroadcast pkBroadcastList = 5;
}

/*
    获取游戏列表的数据  请求
    limit 需要的数据条数
*/
message GetH5GameListReq {
    required uint64 uuid = 1;
    optional uint32 limit = 2;
}

/*
    获取活动列表的数据  响应
    retCode 错误码 0 成功
    retMsg 错误码注释
    gameList 数据列表
*/
message GetH5GameListRsp {
    optional uint32 retCode = 1;
    optional string errMsg = 2;
    repeated H5GameSimp gameList = 3;
}


/*
    获取小游戏详情  请求
    uuid 用户id
    gameId 游戏id
*/
message GetH5GameDetailReq {
    required uint64 uuid = 1;
    required uint32 gameId = 2;
}

/*
    获取小游戏详情  响应
    retCode 返回错误码 0，成功
    errMsg 错误注释
*/
message GetH5GameDetailRsp {
    required uint32 retCode = 1;
    optional string errMsg = 2;
    optional H5GameInfo h5GameInfo = 3;
}

/*
    获取对战广场消息  请求
    uuid 用户id
    limit 请求返回的数据条数 默认50条
 */
message GetWarSquareReq {
    required uint64 uuid = 1;
    optional uint32 limit = 2;
}

/*
    获取对战广场消息  响应
    retCode 返回错误码 0，成功
    errMsg 错误注释
    broadcastList 对战消息
 */
message GetWarSquareRsp {
    required uint32 retCode = 1;
    optional string errMsg = 2;
    repeated PkBroadcast broadcastList = 3;
}

/*
    获取聊天窗口游戏列表的数据  请求
*/
message GetChatGameListReq {
    required uint64 uuid = 1;
}

/*
    获取聊天窗口活动列表的数据  响应
    retCode 错误码 0 成功
    retMsg 错误码注释
    gameList 数据列表
*/
message GetChatGameListRsp {
    optional uint32 retCode = 1;
    optional string errMsg = 2;
    repeated H5GameSimp gameList = 3;
}