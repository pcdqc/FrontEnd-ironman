package com.xiaomi.channel.proto;

option java_package = "com.xiaomi.channel.proto";
option java_outer_classname = "GameProto";

// protoc --java_out=../../../app/src/main/chat-java-gen/ ./Game.proto
// 用户App附加信息
message AppInfo {
    required int32 wifi = 1; //用户网络情况(1:wifi,0:其他)
    required string version = 2; //app版本号
}

// 游戏信息
message GameInfo {
    optional uint32 gameId = 1; //游戏id  0 - 随机游戏
    optional string url = 2; // 链接地址
    optional string token = 3; // 用户token
}

// 房间信息
message RoomInfo {
    required string roomId = 1; // 房间Id
    optional uint32 mainStatus = 2; //主状态，1：匹配中、2：准备游戏、3：开始游戏、4：游戏中、5：结束
    optional uint32 subStatus = 3; //房间关闭原因 1:邀请超时 2:拒绝邀请 3:取消邀请 4:进入游戏超时 5:游戏正常结束 6:游戏异常结束
    optional uint64 createTime = 4; //房间创建时间
}

// 基础用户信息
message BaseUserInfo {
    required uint64 uuid = 1; //用户ID
    optional string url = 2; //头像时间戳，精确到秒
    optional string nickname = 3; //昵称
    optional uint32 sex = 4; //性别 1男 2女 0未知
    optional string Birthday = 5; //出生年月日，格式为: 1986/02/23 未填为空字符串
}

// 1. 邀请\匹配
message MatchingReq {
    optional uint64 inviteuuid = 1; //被邀请的fuid 0 - 随机玩家
    optional uint32 inviteAppid = 2; //被邀请的appId 0 - 随机玩家
    optional uint32 gameId = 3; //游戏id  0 - 随机游戏
    required AppInfo appInfo = 4; // App附加信息
    optional string traceId = 5; // 匹配的唯一ID 只是匹配的时候添加
}

//匹配返回
message MatchingRsp {
    required int32 retCode = 1; //返回code
    optional string msg = 2; // 错误信息
    optional string sessionId = 3; // sessionId 匹配成功返回
    optional GameInfo gameInfo = 4; // 游戏信息 邀请时返回
    optional RoomInfo roomInfo = 5; // 房间信息 邀请时返回
    optional uint64 agingTime = 6; // 邀请时效时间 unix时间戳 秒  邀请时返回
}

// 2. 取消匹配
message UnMathchingReq {
    required AppInfo appInfo = 1; // App附加信息
}

//返回
message UnMatchingRsp {
    required int32 retCode = 1; //返回code
    optional string msg = 2; // 错误信息
    optional uint32 matchingType = 3; // 匹配类型 2:指定游戏 3:随机人 以下参数:code=MatchSuccess 返回
    repeated BaseUserInfo user = 4; // 房间用户信息  重复
    optional string sessionId = 5; // sessionId
    optional GameInfo gameInfo = 6; // 游戏信息 matchingType=2才返回
    optional RoomInfo roomInfo = 7; // 房间信息 matchingType=2才返回
}

// 3. 同意邀请
message AgreeGameReq {
    required string roomId = 1; // 房间id
    required AppInfo appInfo = 2; // App附加信息
}

message AgreeGameRsp {
    required int32 retCode = 1; //返回code
    optional string msg = 2; // 错误信息
    optional GameInfo gameInfo = 3; // 游戏信息
    optional RoomInfo roomInfo = 4; // 房间信息
    optional string sessionId = 5; // sessionId
}

// 4. 拒绝邀请
message RefuseGameReq {
    required string roomId = 1; //房间id
    required AppInfo appInfo = 2; // App附加信息
}

message RefuseGameRsp {
    required int32 retCode = 1; //返回code
    optional string msg = 2; // 错误信息

}

// 5. 邀请等待心跳
message HearBeatReq {
    required AppInfo appInfo = 1; // App附加信息
}

message HearBeatRsp {
    required int32 retCode = 1; //返回code
    optional string msg = 2; // 错误信息
    optional uint32 matchingType = 3; // 匹配类型 2:指定游戏 3:随机人
    repeated BaseUserInfo user = 4; // 房间用户信息  重复
    optional string sessionId = 5; // sessionId
    optional GameInfo gameInfo = 6; // 游戏信息 matchingType=3才返回
    optional RoomInfo roomInfo = 7; // 房间信息 matchingType=3才返回

}

// 6. 关闭IM
message CloseIMReq {
    required AppInfo appInfo = 1; // App附加信息
    optional uint64 inviteuuid = 2; //被邀请的fuid 0 - 随机玩家
    optional uint32 inviteAppid = 3; //被邀请的appId 0 - 随机玩家
    optional string sessionId = 4; // sessionId
}

message CloseIMRsp {
    required int32 retCode = 1; //返回code
    optional string msg = 2; // 错误信息
}

// 7. 退出游戏
message QuitGameReq {
    required AppInfo appInfo = 1; // App附加信息
    optional string roomId = 2; // 房间id
    optional string sessionId = 3; // sessionId
}

message QuitGameRsp {
    required uint32 retCode = 1; //返回code
    optional string msg = 2; // 错误信息
}

// PUSH

// 1. 匹配游戏成功 (进入游戏信令) push/MI
message MatchingGame {
    optional GameInfo gameInfo = 1; // 游戏信息
    optional RoomInfo roomInfo = 2; // 房间信息
    optional string sessionId = 3; // sessionId
    repeated BaseUserInfo user = 4; // 用户信息 房间用户信息  多人
}

// 2. 邀请玩家游戏 IM
message InviteGame {
    optional GameInfo gameInfo = 1; // 游戏信息
    optional RoomInfo roomInfo = 2; // 房间信息
    repeated BaseUserInfo user = 3; // 用户信息 房间用户信息  多人
    optional string sessionId = 4; // sessionId
    optional uint64 agingTime = 5; // 邀请时效时间 unix时间戳 秒  邀请时返回
}

// 3. 接收邀请
message Agree {
    required uint32 gameId = 1; //游戏id
    required uint64 uuid = 2; //谁同意
    optional RoomInfo roomInfo = 3; // 房间信息
}

// 4. 拒绝邀请
message Refuse {
    required uint32 gameId = 1; //游戏id
    required uint64 uuid = 2; //谁拒绝
    optional RoomInfo roomInfo = 3; // 房间信息
}

// 5. 游戏开始
// 双方都进入了游戏
message GameStart {
    repeated BaseUserInfo user = 1; // 用户信息 房间用户信息  多人
    optional RoomInfo roomInfo = 2; // 房间信息
}

// 6. 游戏结束
message EndGame {
    required string roomId = 1; //房间id
    required uint32 gameId = 2; //游戏id
    required uint64 startTime = 3; //开始时间
    required uint64 endTime = 4; //结束时间
    required uint64 duration = 5; //游戏时长
    repeated GameResult results = 6; //游戏结果
    optional RoomInfo roomInfo = 7; // 房间信息
    optional uint32 sumNumber = 8; //总对局数
}

//游戏结果
message GameResult {
    required uint64 uuid = 1; //fuid
    required uint64 appId = 2; //fuid
    required uint32 win = 3; //win：0失败1胜利
    required uint32 status = 4; //status:1正常结算 2:异常推出
    required uint32 winTimes = 5; //胜利次数
}

// 7. 邀请失效
message InviteRefuse {
    optional uint64 uuid = 1; // 对方用户Id
    optional string sessionId = 2; // sessionId
    repeated string roomId = 3; //房间id 多个
}

// 8. 对手退出游戏
message InviteQuit {
    optional uint64 uuid = 1; // 退出方用户Id
    optional string sessionId = 2; // sessionId
    optional string roomId = 3; //房间id 多个
}

message MatchingPeople {
    optional string sessionId = 1; // sessionId
    repeated BaseUserInfo user = 2; // 用户信息 房间用户信息  多人
}