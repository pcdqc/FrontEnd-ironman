syntax = "proto2";
package com.wali.knights.proto;

import "UserInfo.proto";
option java_package = "com.wali.knights.proto";
option java_outer_classname = "UserProto";

//拉取单个用户信息
//cmd:knights.user.setuserinfo
message SetUserInfoReq
{
    required uint64 uuid                = 1; //用户ID
    optional UserInfo userInfo          = 2; //用户信息
    optional string imei                = 3; //用户首次设置信息时，带上imei
    optional string inviteCode          = 4; //邀请码
    optional bool autoLogin             = 5; //是否自动登陆
}

message SetUserInfoRsp
{
    required uint32 retCode     = 1; //0:表示成功
    optional string errMsg      = 2;
    optional UserInfo userInfo  = 3; //邀请码合法，返回邀请人的用户信息
    optional uint32 status      = 4; //邀请状态 1：表示imei已经存在
}

//拉取单个用户信息
//cmd:knights.user.getuserinfo
message GetUserInfoReq
{
    required uint64 uuid = 1;//用户ID
}

message GetUserInfoRsp
{
    required uint32 retCode             = 1; //0:表示成功
    optional UserInfo userInfo          = 2; //用户信息
    optional UserExtraInfo extraInfo    = 3; //用户其他信息
    optional string errMsg              = 4;
}

message UserSetting
{
    required uint64 uuid        = 1;
    optional bool isNoTalking   = 2; //是否禁言
    optional bool isShield      = 3; //是否屏蔽
    optional bool isReplyNotify = 4; //回复的消息是否弹mipush的消息栏
}

message UserExtraInfo
{
    optional uint32 recvLikeTimes   = 1; //收到的赞总数
    optional uint32 followingSize   = 2; //关注数
    optional uint32 followerSize    = 3; //粉丝数
    optional bool isFollowing       = 4; //是否关注（只有点开他人主页时，才返回该字段）
    optional VisitorTag visitorTag  = 5; //访问标签
    optional uint32 gameCounter     = 6; //玩游戏的总数
    optional bool isBothFollowing   = 7;
    optional bool isNoTalking       = 8; //禁言状态
    optional uint32 h5GamePlayTimes  =9;//小游戏总场次
    optional uint32 h5GameWinTimes =10;//小游戏赢的总场次
}

message VisitorTag
{
    optional bool hasVisited        = 1; //是否已经访问过该用户主页
    optional uint32 nthVisitor      = 2; //如果是第一次访问，则该字段表示用户是今日第几位访客
    optional uint32 totalVisitors   = 3; //如果不是第一次访问，则该字段表示用户主页今天共有多少位访客
}


//拉取单个用户的设置信息
message GetUserSettingReq
{
    required uint64 uuid = 1;
}

message GetUserSettingRsp
{
    required uint32 retCode         = 1;
    optional UserSetting setting    = 2;
}

//更新用户设置信息
message SetUserSettingReq
{
    required uint64 uuid        = 1;
    optional bool isReplyNotify = 2; //回复消息是否有mipush的系统通知栏
}

message SetUserSettingRsp
{
    required uint32 retCode = 1;
}

//上传用户地址信息
message SetUserAddressReq
{
    required uint64 uuid    = 1;
    optional string address = 2; //地址json串
}

message SetUserAddressRsp
{
    required uint32 retCode = 1;
    optional string errMsg  = 2;
}

//获取用户地址信息
message GetUserAddressReq
{
    required uint64 uuid = 1;
}

message GetUserAddressRsp
{
    required uint32 retCode = 1;
    optional string errMsg  = 2;
    optional string address = 3; //地址json串
}


//knights.user.getuseraddresslist
message GetUserAddressListReq
{
    required uint64 uuid    = 1;
}

message GetUserAddressListRsp
{
    required uint32 retCode             = 1;
    optional string errMsg              = 2;
    repeated NewAddressInfo addressList = 3;
}

//new 设置用户地址信息
//knights.user.updateuseraddress
message UpdateUserAddressReq
{
    required uint64 uuid                = 1;
    optional uint32 mod                 = 2; //1 增加；2 删除；3 修改
    repeated NewAddressInfo addressList = 3;
}

message UpdateUserAddressRsp
{
    required uint32 retCode = 1;
    optional string errMsg  = 2;
}