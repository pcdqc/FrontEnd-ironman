package com.wali.knights.proto;
import "GameInfo.proto";

option java_package = "com.wali.knights.proto";
option java_outer_classname = "GameStatProto";

//命令字：knights.game.getConfig
// 获取通用配置接口
message GetConfigReq {
    optional uint64 uuid            = 1; // 用户ID
}
message GetConfigRsp {
    required uint32 retCode         = 1; // 返回码，0代表成功，非0值失败
    optional string errMsg          = 2; // 错误提示说明
    repeated ConfigInfo config      = 3; // 配置信息
}
// key 说明：
//     blackPackageRegular:玩游戏时长统计黑名单，value格式为包名以半角逗号拼接，例：pkg1,pkg2,pkg3
message ConfigInfo {
    optional string configKey       = 1; // 配置key
    optional string configValue     = 2; // 配置value
}

//命令字：knights.game.getPlayGames
// 获取玩过的游戏接口
message GetPlayGamesReq {
    optional uint64 uuid            = 1; // 用户ID
    optional uint32 page            = 2; // 需要展示的页面（需要展示第几页）
    optional uint32 pageSize        = 3; // 页面展示的大小
}
message GetPlayGamesRsp {
    required uint32 retCode                 = 1; // 返回码，0代表成功，非0值失败
    optional string errMsg                  = 2; // 错误提示说明
    optional LatestPlayGame latestPlayGame  = 3; // 玩过的游戏列表
    optional uint32 totalRecordCnt  = 4; // 总记录数
    optional uint32 currPage        = 5; // 当前页号
}

//命令字：knights.game.uploadPlayGames
//上报玩过的游戏接口
message UploadPlayGamesReq {
    optional uint64 uuid            = 1; // 用户ID
    optional string imei            = 2; // 设备唯一标识MD5
    repeated UploadGame uploadGame  = 3; // 上传游戏数据
}
message UploadPlayGamesRsp {
    required uint32 retCode                 = 1; // 返回码，0代表成功，非0值失败
    optional string errMsg                  = 2; // 错误提示说明
}
message UploadGame {
    optional string packageName     = 1; // 游戏包名
    optional uint32 playDuration    = 2; // 玩游戏时长，精确到秒
    optional uint64 playTime        = 3; // 最后玩游戏的时间，精确到毫秒
    optional uint64 beginTime       = 4; // 开始玩游戏时间
    optional uint32 playMonth       = 5; // 统计时长月份，格式: "yyyyMM" 201704
}
//最近玩过的游戏
message LatestPlayGame {
    optional uint64 uuid            = 1; // 用户ID
    repeated PlayGame playGames     = 2; // 最近玩的游戏列表
}

//玩过的游戏
message PlayGame {
    optional uint64 gameId          = 1; // 游戏ID
    optional uint32 playDuration    = 2; // 玩游戏时长
    optional GameInfo gameInfo      = 3; // kv中不存储此字段，用于返回数据
    optional uint64 playTime        = 4; // 最后玩游戏的时间，精确到毫秒
    optional uint64 beginTime       = 5; // 该游戏玩的开始时间
    optional string viewpointId     = 6; // 动态数据ID
    optional uint32 dataType        = 7; // 数据类型
    optional uint32 score           = 8; // 评分
}

//获取游戏时长排行榜
//命令字：knights.game.getDurationRank
message GetGameDurationRankReq {
    required uint64 gameId  = 1; //游戏id
    optional uint64 uuid    = 2; //用户id，匿名登录时不用填该字段
}

message RankUserInfo {
    required uint64 uuid            = 1;
    optional uint64 headImgTs       = 2; //头像
    optional string nickname        = 3; //昵称
    optional uint32 playDuraion      = 4; //游戏时长
    optional bool isFollowing       = 5; //是否关注
    optional bool isBothFollowing   = 6; //是否双向关注
}
message GetGameDurationRankRsp {
    required uint32 retCode     = 1;
    optional string errMsg      = 2;
    repeated RankUserInfo infos = 3;
    optional uint32 myRank      = 4;
    optional uint32 myDuration  = 5;
}
//上报安装游戏接口
message ReportMyGamesReq {
    optional uint64 uuid            = 1; // 用户ID
    repeated uint64 gameIds         = 2; // 已安装游戏
}

message ReportMyGamesRsp {
    required uint32 retCode     = 1;
    optional string errMsg      = 2;
}

//命令字：knights.game.getMyGames
//获取安装过的的游戏接口
message GetMyGamesReq {
    optional uint64 uuid            = 1; // 用户ID
}

message GetMyGamesRsp {
    required uint32 retCode     = 1;
    optional string errMsg      = 2;
    repeated uint64 gameIds     = 3; // 已安装游戏

}

//命令字：knights.game.getInstalledGames
message GetInstalledGamesReq{
    required uint64 uuid        = 1;
    optional uint32 offset      = 2;
    optional uint32 pageSize    = 3;  //默认20
}

message GetInstalledGamesRsp{
    required uint32 retCode     = 1;
    optional string errMsg      = 2;
    repeated GameInfo gameInfos = 3; //不包含jsonData
    optional bool hasMore       = 4; //是否还有数据
}