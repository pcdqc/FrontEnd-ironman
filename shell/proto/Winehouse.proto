syntax = "proto2";
package com.wali.knights.proto;

import "WineHouseSimpleInfo.proto";
import "ActivityInfo.proto";
import "AwardInfo.proto";
import "UserInfo.proto";
import "WineHouseUserHistoryRank.proto";
import "VideoInfo.proto";
import "GameInfo.proto";

option java_package = "com.wali.knights.proto";
option java_outer_classname = "WineHouseProto";

//活动列表 每个元素存储活动的id和名称
//key:wine_house_list
message WineHouseList {
    repeated WineHouseSimpleInfo simpileInfos          = 1;
}

//存储活动配置，包括游戏id、游戏名称、游戏活动描述、活动奖品信息
//key:wine_house_info_${actId}
// 存储pb参见最终通用PB中的ActivityInfo


//参赛者列表，存放所有参赛者id
//key:wine_house_user_list_${actId}
message WineHouseUserList {
    repeated uint64 uuid                            = 1;//用户列表
}
//参赛者信息，存放用户id、上传视频ID列表、参赛时间
//key:wine_house_user_info_${actId}_${uuid}
message WineHouseUser {
    optional uint64 uuid                             = 1;//存放用户id
    repeated string videoId                          = 2;//上传视频ID列表，最多存储3个，最后一个为确定的id，如果最后一个违规被屏蔽，不从该字段移除，拉取时判断最后一个id的屏蔽状态
    optional uint64 joinTime                         = 3;//参赛时间
    optional uint32 score                            = 4;//比赛分数
    optional uint32 rank                             = 5;//名次 1-10分别表示第一名到第十名 没有值代表没有名次
    optional bool acceptAward                        = 6;//是否领奖
    optional uint64 accpetTime                       = 7;//领奖时间
}
//活动视频ID列表，以list存放每个用户最后一次上传的视频的ID
//key:wine_house_video_list_${actId}
message WineHouseVideoList {
    repeated string videoId                         = 1;//每个用户最后一次上传的视频的ID 最多存储1万个，如果用户最后一次上传的视频被屏蔽，从列表中移除该id，videoCount减一
    optional uint32 videoCount                      = 2;//视频总量
}
//获奖者列表 存储活动前n名，列表每个元素存储用户id、视频id、获奖心得、名次、是否领奖
//key:wine_house_winner_list_${actId}
message WineHouseWinnerList {
    repeated WineHouseWinner wineHouseWinner      = 1;
}
message WineHouseWinner {
    optional uint64 uuid                            = 1;//用户id
    optional string videoId                         = 2;//视频id
    optional string winingExperience                = 3;//获奖心得
}
//用户历史参赛成绩汇总，冠军、季军、亚军、上榜等，分别统计
//key:wine_house_user_score_${uuid}
//存储pb参见最终通用PB中的WineHouseUserHistoryRank

//----
//----

//************************拉取历史活动列表************************
//命令字：knights.winehouse.getHistoryActivityList
message GetHistoryActivityListReq {
    optional uint64 uuid    = 1;
}

message GetHistoryActivityListRsp {
    required uint32 retCode                         = 1; //返回码，0代表成功，非0值失败
    optional string errMsg                          = 2; //错误提示说明
    repeated WineHouseSimpleInfo simpleInfo         = 3;
}

//************************拉取活动详细信息************************
//命令字：knights.winehouse.getActivityInfo
message GetActivityInfoReq {
    required uint32 actId   = 1; //活动ID
    optional uint64 uuid    = 2; //用户id
}

message GetActivityInfoRsp {
    required uint32 retCode                 = 1; //返回码，0代表成功，非0值失败
    optional string errMsg                  = 2; //错误提示说明
    optional ActivityInfo actInfo           = 3; //活动信息
    optional uint32 commentCount            = 4; //活动的评论数量
    optional bool hasJoin                   = 5; //是否已经参加
    optional uint32 uploadTime              = 6; //以上传次数
    optional uint32 maxUploadTime           = 7; //最大上传次数
    optional uint32 selfRank                = 8; //用户自身的排名，无排名时该字段不存在
    repeated Winner winner                  = 9; //获奖者列表
    optional AwardInfo selfAward            = 10; //当前用户的奖品
    optional bool hasAward                  = 11; //当前用户是否有奖
    optional uint32 joinUserCount           = 12; //参赛者人数
    optional GameInfo gameInfo              = 13; //游戏信息
    optional bool hasAddress                = 14; //用户是否填写领奖地址
}

//获胜者信息
message Winner {
    optional UserInfo userInfo              = 1; //用户信息
    optional uint32 score                   = 2; //分值
    optional uint32 rank                    = 3; //名次
    optional string videoTitle              = 4; //上传视频的标题
    optional string winingExperience        = 5; //获奖感言
    optional AwardInfo awardInfo            = 6; //奖品信息
    optional VideoInfo videoInfo            = 7; //视频信息
}

//************************拉取参赛骑士列表************************
//命令字：knights.winehouse.getJoinUserList
message GetJoinUserListReq {
    required uint32 actId               = 1; //活动ID
    optional uint32 page                = 2; //拉取页数
    optional uint32 pageSize            = 3; //每页数量，默认每页20个
    optional uint32 sortRule            = 4; //排序规则，1=时间升序，2=时间降序，默认降序
}
message GetJoinUserListRsp {
    required uint32 retCode             = 1; //返回码，0代表成功，非0值失败
    optional string errMsg              = 2; //错误提示说明
    repeated JoinUserInfo joinUserInfo  = 3; //参赛骑士列表
    optional uint32 joinUserCount       = 4; //参赛用户数量
    optional bool hasMore               = 5; //是否还有更多
}
//参赛骑士信息
message JoinUserInfo {
    optional uint64 joinTime                            = 1; //参赛时间
    optional UserInfo userInfo                          = 2; //参赛用户信息
    optional WineHouseUserHistoryRank historyRank      = 3; //历史成绩
}

//************************拉取参赛作品列表************************
//命令字：knights.winehouse.getWorksList
//存储只存最近1万个活动视频
message GetWorksListReq {
    required uint32 actId               = 1; //活动ID
    optional uint32 page                = 2; //拉取页数
    optional uint32 pageSize            = 3; //每页数量，默认每页20个
    optional uint32 sortRule            = 4; //排序规则，1=时间升序，2=时间降序，默认降序
}

message GetWorksListRsp {
    required uint32 retCode             = 1; //返回码，0代表成功，非0值失败
    optional string errMsg              = 2; //错误提示说明
    repeated WorksInfo worksInfo        = 3; //视频列表
    optional bool hasMore               = 4; //是否还有更多
}

message WorksInfo {
    optional UserInfo userInfo          = 1; //视频上传用户信息
    optional VideoInfo videoInfo        = 2; //视频ID
    optional string videoTitle          = 3; //用户发布的视频标题
}

//************************用户领奖************************
//命令字：knights.winehouse.acceptAward
message AcceptAwardReq {
    required uint64 uuid                = 1; //用户ID
    required uint32 actId               = 2; //活动ID
    optional string winingExperience    = 3; //领奖新的，前10名必填，不填领奖失败
}

message AcceptAwardRsp {
    required uint32 retCode             = 1; //返回码，0代表成功，非0值失败
    optional string errMsg              = 2; //错误提示说明
}

//************************用户报名************************
//命令字：knights.winehouse.joinActivity
message JoinActivityReq {
    required uint32 actId               = 1;
    required uint64 uuid                = 2;
}
message JoinActivityRsp {
    required uint32 retCode             = 1; //返回码，0代表成功，非0值失败
    optional string errMsg              = 2; //错误提示说明
}

//************************用户收货地址***********************
//命令字：knights.winehouse.userSpAddress
message UserSpAddressReq {
    required uint32 actId               = 1; //活动id
    required uint64 uuid                = 2; //用户id
    optional uint32 addressId           = 3; //收货地址id
}
message UserSpAddressRsp {
    required uint32 retCode             = 1; //返回码，0代表成功，非0值失败
    optional string errMsg              = 2; //错误提示说明
}